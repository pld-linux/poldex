#!/usr/bin/perl -w

use strict;
use Term::ReadKey;

my %packets=();
my @packets_list=();
my @installed=();
my @desc=();
my @to_install=();
my @to_uninstall=();
my ($tw,$th)=GetTerminalSize;
my $index=0;
my $input='';
my $i=0;
my $sort=0;
my $g=0;

# wysokosc tabelki
$th-=12;
# jednak cos musi byc widac
if($th<2){$th=2}

#kolory
my $kzie="\033[32m";
my $kbia="\033[0m";
my $kcze="\033[31m";
my $kzol="\033[33m";
my $knie="\033[34m";
my $ktur="\033[36m";

&read_poldek;
&chkinstalled;

@packets_list= sort keys %packets;

&table;
while($input ne 'q'){
$input=&key();
&on_key();
}
system('clear');
sub key{
	ReadMode 4;
	my $key=ReadKey(0);
	ReadMode 0;
	return $key;

}
sub help{
}
sub table{
	system('clear');
	my $ilosc=0;
        $ilosc=@packets_list;
        while($index>$ilosc-1){$index--};
        if($index<0){$index=0};
        while($index>$i+$th){$i++};
        while($index<$i){$i--};
	print "-------------------------------------------------------------------------------\n";
	print "|";
	if($sort==0 or $sort==1){print $knie}
	print "             Packet$kbia             |";
	if($sort==2 or $sort==3){print $knie}
	print "   Status$kbia   |";
	if($sort==4 or $sort==5){print $knie}
	print "            Group$kbia              |\n";
	print "-------------------------------------------------------------------------------\n";
        for (my $j=$i;$j<$i+$th+1;$j++){
       	     my ($a,$b,$c,$z);
            if ($j==$index){print $kzie};
format STDOUT =
@<@<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<@<@||||||||||@<@<<<<<<<<<<<<<<<<<<<<<<<<<<<<<@<
$z,$a,$z,  $b,$z,$c,$z
.
           $z='|';
           if (defined $packets_list[$j] && exists $packets{$packets_list[$j]}){
		   $a=$packets_list[$j];
		   if($packets{$packets_list[$j]}[0] eq 'I'){$b='Installed';
		   }else{$b=$packets{$packets_list[$j]}[0]};
		   $c=$packets{$packets_list[$j]}[2];
		   $~='STDOUT';
		   write  STDOUT;
	   }
	   print $kbia;
        }
        print "-------------------------------------------------------------------------------";
	print "\n$kzol Package:$kzie  $packets_list[$index]";
	if(defined $packets{$packets_list[$index]}[1]){
		print "\n$kzol Sumary :$kbia  $packets{$packets_list[$index]}[1]";
	}
	if(defined $packets{$packets_list[$index]}[9]){
		print "\n$kzol Package size:$kbia  $packets{$packets_list[$index]}[9]";
	}
	print "\n\n$kcze    [F]-FullDesc [S]-Sort [G/H]-ChGrp [I]-Install [U]-Uninstall [P]-Process";
	print "\n            [DOWN]-Next [UP]-Up [SPACE]-PgDown [B]-PgUp [Q]-Quit$kbia";
}
sub read_poldek{
	my $ind=-1;
	my $pack='';	
	system('clear');
	print "\n\n     Wczytujê opisy pakietów...\n";
	@desc=`poldek --shcmd 'desc *'`;

	my $dl=@desc;
	while(++$ind<$dl){
		if($desc[$ind]=~/Package:\s*(\S.*\S)/){$pack= $1;next}
		if($desc[$ind]=~/Summary:\s*(\S.*\S)/){($packets{$pack}[1])=$1;next}
		if($desc[$ind]=~/Group:\s*(\S.*\S)/){($packets{$pack}[2])=$1;next}
		if($desc[$ind]=~/Vendor:\s*(\S.*\S)/){($packets{$pack}[3])=$1;next}
		if($desc[$ind]=~/License:\s*(\S.*\S)/){($packets{$pack}[4])=$1;next}
		if($desc[$ind]=~/Arch\/OS:\s*(\S.*\S)/){($packets{$pack}[5])=$1;next}
		if($desc[$ind]=~/URL:\s*(\S.*\S)/){($packets{$pack}[6])=$1;next}
		if($desc[$ind]=~/Built:\s*(\S.*\S)/){($packets{$pack}[7])=$1;next}
		if($desc[$ind]=~/Size:\s*(\S.*\S)/){($packets{$pack}[8])=$1;next}
		if($desc[$ind]=~/Package size:\s*(\S.*\S)/){($packets{$pack}[9])=$1;next}
		if($desc[$ind]=~/Path:\s*(\S.*\S)/){($packets{$pack}[10])=$1;next}
		if($desc[$ind]=~/Description:/){
			while(++$ind<$dl && $desc[$ind] !~ /Package:/ ){
				$desc[$ind]=~s/^\n$//;
				$packets{$pack}[11]=$packets{$pack}[11].$desc[$ind];
			}
		$ind--;	
		next;
		}
	}
}
sub on_key{
	if ($input eq chr(66)){$index++;&table()}
	if ($input eq chr(65)){$index--;&table()}
	if ($input eq ' '){$index+=$th+1;$i+=$th+1;&table()}
	if ($input eq 'b'){$index-=$th+1;$i+=$th+1;&table()}
	if ($input eq 'i'){
		if($packets{$packets_list[$index]}[0] eq ' ' && !grep /^\Q$packets_list[$index]\E$/,@to_install){
			$packets{$packets_list[$index]}[0]='To Install';
			push @to_install,$packets_list[$index];
			&table();
		}
		if($packets{$packets_list[$index]}[0] eq 'ToUninstall'){
			grep s/^\Q$packets_list[$index]\E$/ /,@to_uninstall;
			$packets{$packets_list[$index]}[0]='I';
			&table;
		}
	}
	if ($input eq 'u'){
		if($packets{$packets_list[$index]}[0] eq 'I' && !grep /^\Q$packets_list[$index]\E$/,@to_uninstall){
			$packets{$packets_list[$index]}[0]='ToUninstall';
			push @to_uninstall,$packets_list[$index];
			&table();
		}
		if($packets{$packets_list[$index]}[0] eq 'To Install'){
			grep s/^\Q$packets_list[$index]\E$/ /,@to_install;
			$packets{$packets_list[$index]}[0]=' ';
			&table;
		}
	}
	if ($input eq 's'){
		$index=0;
		if($sort<5){$sort++;
		}else{$sort=0}
		if($sort==0){@packets_list= sort keys %packets}
		if($sort==1){@packets_list= reverse sort keys %packets}
		if($sort==2){@packets_list= sort {$packets{$b}[0] cmp $packets{$a}[0] || $a cmp $b}  keys %packets}
		if($sort==3){@packets_list= sort {$packets{$a}[0] cmp $packets{$b}[0] || $a cmp $b} sort keys %packets}
		if($sort==4){@packets_list= sort {$packets{$a}[2] cmp $packets{$b}[2] || $a cmp $b} sort keys %packets}
		if($sort==5){@packets_list= sort {$packets{$b}[2] cmp $packets{$a}[2] || $a cmp $b} sort keys %packets}
		&table();
	}
	if ($input eq 'p'){	
		my $packets_to_inst='';
		my $packets_to_uninst='';
		system('clear');
		if(grep /\S/,@to_install or grep /\S/,@to_uninstall){
			if(grep /\S/,@to_install){
				print "\n\n   Pakiety do zainstalowania:\n\n";
				foreach my $a (@to_install){
					if($a ne ' '){
						print " $a\n";
						$packets_to_inst=join(' ',($packets_to_inst,$a));
					}
				}
				print "\n Poldek do dzie³a...\n\n";
				system("poldek --shcmd \'install $packets_to_inst\'");
				@to_install=();
			}
			if(grep /\S/,@to_uninstall){
				print "\n\n   Pakiety do odinstalowania:\n\n";
				foreach my $a (@to_uninstall){
					if($a ne ' '){
						print " $a\n";
						$packets_to_uninst=join(' ',($packets_to_uninst,$a));
					}
				}
				print "\n Poldek do dzie³a...\n\n";
				system("poldek --shcmd \'uninstall $packets_to_uninst\'");
				@to_uninstall=();
			}
			&chkinstalled;
			print "\n\n [KEY]\n";
			&key();
		}
		&table;
	}
	if ($input eq 'f'){
	system('clear');
	print "\n$kzol Package     :$kzie  $packets_list[$index]";
		if(defined $packets{$packets_list[$index]}[3]){
			print "\n$kzol Vendor      :$kbia  $packets{$packets_list[$index]}[3]";
		}
		if(defined $packets{$packets_list[$index]}[1]){
			print "\n$kzol Sumary      :$kbia  $packets{$packets_list[$index]}[1]";
		}
		if(defined $packets{$packets_list[$index]}[4]){
			print "\n$kzol License     :$kbia  $packets{$packets_list[$index]}[4]";
		}
		if(defined $packets{$packets_list[$index]}[5]){
			print "\n$kzol Arch/OS     :$kbia  $packets{$packets_list[$index]}[5]";
		}
		if(defined $packets{$packets_list[$index]}[6]){
			print "\n$kzol URL         :$kbia  $packets{$packets_list[$index]}[6]";
		}
		if(defined $packets{$packets_list[$index]}[7]){
			print "\n$kzol Built       :$kbia  $packets{$packets_list[$index]}[7]";
		}
		if(defined $packets{$packets_list[$index]}[8]){
			print "\n$kzol Size        :$kbia  $packets{$packets_list[$index]}[8]";
		}
		if(defined $packets{$packets_list[$index]}[9]){
			print "\n$kzol Package size:$kbia  $packets{$packets_list[$index]}[9]";
		}
		if(defined $packets{$packets_list[$index]}[10]){
			print "\n$kzol Path        :$kbia  $packets{$packets_list[$index]}[10]";
		}
		if(defined $packets{$packets_list[$index]}[11]){
			print "\n$kzol Description :$kbia\n$packets{$packets_list[$index]}[11]";
		}
		print "\n     [KEY]";
		&key;
		&table;
	}
	if ($input eq 'g' or $input eq 'h'){
		my $gg=1;
		if ($input eq 'g'){$g++;
		}else{$g--;if($g<2){$g=1;$index=0;$i=0}
		}
		my $ind=0;
		@packets_list= sort {$packets{$a}[2] cmp $packets{$b}[2] || $a cmp $b}  keys %packets;
		my $il=@packets_list;
		while($gg<$g){
			if($packets{$packets_list[$ind]}[2] ne $packets{$packets_list[$ind+1]}[2]){
				$gg++;
				$index=$ind+1;
				$i=$ind+1;
			}
			$ind++;
			if($ind==$il-1){$ind=0;$g=0};
		}
		&table;
	}
		
}
sub chkinstalled{
	@installed=`rpm -qa`;
	foreach my $a (@installed){
		chomp $a;
	}
	foreach my $a (keys %packets){
		$packets{$a}[0]=' ';
		foreach my $b (@installed){
			if($a eq $b){
				$packets{$a}[0]='I';
			}
		}
	}
}
